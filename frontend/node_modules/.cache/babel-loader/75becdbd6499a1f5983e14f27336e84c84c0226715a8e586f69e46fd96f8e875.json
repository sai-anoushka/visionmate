{"ast":null,"code":"var _jsxFileName = \"/Users/anoush/VisionMate/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [imagePreview, setImagePreview] = useState(null);\n\n  // Handle File Selection\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    setImagePreview(URL.createObjectURL(file)); // Preview the selected image\n  };\n\n  // Handle Upload to Backend\n  const handleUpload = async () => {\n    if (!selectedFile) return alert(\"Please select or capture an image!\");\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await axios.post(\"http://192.168.1.96:8000/caption/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setCaption(response.data.caption);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"VisionMate - Image Captioning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"environment\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Generate Caption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Preview:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePreview,\n        alt: \"Selected or Captured\",\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), caption && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"20px\",\n        fontSize: \"18px\"\n      },\n      children: [\"Caption: \", caption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BzD2nUTuMQZUNI7lSPSDusfL3Aw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","caption","setCaption","imagePreview","setImagePreview","handleFileChange","event","file","target","files","URL","createObjectURL","handleUpload","alert","formData","FormData","append","response","post","headers","data","error","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","capture","onChange","onClick","marginLeft","marginTop","src","alt","width","fontSize","_c","$RefreshReg$"],"sources":["/Users/anoush/VisionMate/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [caption, setCaption] = useState(\"\");\n  const [imagePreview, setImagePreview] = useState(null);\n\n  // Handle File Selection\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    setImagePreview(URL.createObjectURL(file)); // Preview the selected image\n  };\n\n  // Handle Upload to Backend\n  const handleUpload = async () => {\n    if (!selectedFile) return alert(\"Please select or capture an image!\");\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      const response = await axios.post(\"http://192.168.1.96:8000/caption/\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n      setCaption(response.data.caption);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h2>VisionMate - Image Captioning</h2>\n\n      {/* File Upload + Camera Access */}\n      <input type=\"file\" accept=\"image/*\" capture=\"environment\" onChange={handleFileChange} />\n      <button onClick={handleUpload} style={{ marginLeft: \"10px\" }}>Generate Caption</button>\n\n      {/* Display Image Preview */}\n      {imagePreview && (\n        <div style={{ marginTop: \"20px\" }}>\n          <h4>Preview:</h4>\n          <img src={imagePreview} alt=\"Selected or Captured\" width=\"300\" />\n        </div>\n      )}\n\n      {/* Caption Display */}\n      {caption && <p style={{ marginTop: \"20px\", fontSize: \"18px\" }}>Caption: {caption}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}